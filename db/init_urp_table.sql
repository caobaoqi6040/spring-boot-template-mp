CREATE SCHEMA IF NOT EXISTS backend;

CREATE TABLE backend."tb_user"
(
  "id"          BIGINT    NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
  "username"    VARCHAR   NOT NULL UNIQUE,
  "email"       VARCHAR   NOT NULL UNIQUE,
  "password"    VARCHAR   NOT NULL,
  "create_time" TIMESTAMP NOT NULL DEFAULT now(),
  "update_time" TIMESTAMP NOT NULL DEFAULT now(),
  "enable"      BOOLEAN   NOT NULL DEFAULT true,
  PRIMARY KEY ("id")
);

CREATE TABLE backend."tb_role"
(
  "id"   BIGINT  NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
  "code" VARCHAR NOT NULL,
  PRIMARY KEY ("id")
);

CREATE TABLE backend."tb_permission"
(
  "id"   BIGINT  NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
  "code" VARCHAR NOT NULL,
  PRIMARY KEY ("id")
);

CREATE TABLE backend."role_permission_map"
(
  "id"            BIGINT NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
  "role_id"       BIGINT NOT NULL,
  "permission_id" BIGINT NOT NULL,
  PRIMARY KEY ("id")
);

CREATE TABLE backend."user_role_map"
(
  "id"      BIGINT NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
  "user_id" BIGINT NOT NULL,
  "role_id" BIGINT NOT NULL,
  PRIMARY KEY ("id")
);

ALTER TABLE backend."user_role_map"
  ADD FOREIGN KEY ("user_id") REFERENCES backend."tb_user" ("id")
    ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE backend."user_role_map"
  ADD FOREIGN KEY ("role_id") REFERENCES backend."tb_role" ("id")
    ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE backend."role_permission_map"
  ADD FOREIGN KEY ("role_id") REFERENCES backend."tb_role" ("id")
    ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE backend."role_permission_map"
  ADD FOREIGN KEY ("permission_id") REFERENCES backend."tb_permission" ("id")
    ON UPDATE NO ACTION ON DELETE CASCADE;
